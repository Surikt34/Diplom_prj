openapi: 3.0.3
info:
  title: My Project API
  version: 1.0.0
  description: Документация для моего API
paths:
  /api/catalog/categories/:
    get:
      operationId: api_catalog_categories_list
      description: |-
        Представление для получения списка категорий.

        Кэширует результаты на 15 минут для оптимизации запросов.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /api/catalog/products/:
    get:
      operationId: api_catalog_products_list
      description: |-
        Представление для получения списка товаров.

        Поддерживает фильтрацию по категориям и поставщикам,
        а также поиск по названию и описанию.
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: suppliers
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
  /api/catalog/products/{id}/:
    get:
      operationId: api_catalog_products_retrieve
      description: Представление для получения информации о конкретном товаре.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/catalog/suppliers/:
    get:
      operationId: api_catalog_suppliers_list
      description: |-
        Представление для получения списка поставщиков.

        Кэширует результаты на 15 минут для оптимизации запросов.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Supplier'
          description: ''
  /api/orders/:
    get:
      operationId: api_orders_list
      description: Отображение для получения списка заказов пользователя.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/{id}/:
    get:
      operationId: api_orders_retrieve
      description: Отображение для получения детальной информации о заказе.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /api/orders/{id}/status/:
    patch:
      operationId: api_orders_status_partial_update
      description: Обновить статус конкретного заказа.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrderStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrderStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateOrderStatus'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrderStatus'
          description: ''
  /api/orders/cart/:
    get:
      operationId: api_orders_cart_retrieve
      description: Получить содержимое корзины.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    post:
      operationId: api_orders_cart_create
      description: Добавить товар в корзину или обновить его количество.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    delete:
      operationId: api_orders_cart_destroy
      description: Удалить товар из корзины.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/orders/cart/{id}/:
    get:
      operationId: api_orders_cart_retrieve_2
      description: Получить содержимое корзины.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    post:
      operationId: api_orders_cart_create_2
      description: Добавить товар в корзину или обновить его количество.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cart'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Cart'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Cart'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'
          description: ''
    delete:
      operationId: api_orders_cart_destroy_2
      description: Удалить товар из корзины.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/orders/confirm/:
    post:
      operationId: api_orders_confirm_create
      description: Подтвердить заказ и отправить email-подтверждение.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConfirmOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConfirmOrder'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfirmOrder'
          description: ''
  /api/orders/contacts/:
    post:
      operationId: api_orders_contacts_create
      description: Создать новую контактную информацию.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
  /api/orders/create/:
    post:
      operationId: api_orders_create_create
      description: Отображение для создания нового заказа.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrder'
          description: ''
  /api/orders/history/:
    get:
      operationId: api_orders_history_list
      description: Отображение для получения истории заказов пользователя.
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/users/login/:
    post:
      operationId: api_users_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /api/users/profile/:
    get:
      operationId: api_users_profile_retrieve
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_profile_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_profile_partial_update
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/register/:
    post:
      operationId: api_users_register_create
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/users/token/:
    post:
      operationId: api_users_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/users/token/refresh/:
    post:
      operationId: api_users_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /profile/:
    get:
      operationId: profile_retrieve
      tags:
      - profile
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: profile_update
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: profile_partial_update
      tags:
      - profile
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /register/:
    post:
      operationId: register_create
      tags:
      - register
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    Cart:
      type: object
      description: Сериализатор для корзины пользователя.
      properties:
        id:
          type: integer
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/CartItem'
          readOnly: true
      required:
      - id
      - items
    CartItem:
      type: object
      description: Сериализатор для элементов корзины.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
        product_name:
          type: string
          title: Название товара
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
      required:
      - id
      - product
      - product_name
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название категории
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Описание категории
        parent:
          type: integer
          nullable: true
          title: Родительская категория
      required:
      - id
      - name
    ConfirmOrder:
      type: object
      description: сериализатор для подтверждения заказа
      properties:
        contact_id:
          type: integer
      required:
      - contact_id
    Contact:
      type: object
      description: Сериализатор для контактной информации пользователя.
      properties:
        id:
          type: integer
          readOnly: true
        last_name:
          type: string
          maxLength: 100
        first_name:
          type: string
          maxLength: 100
        middle_name:
          type: string
          maxLength: 100
        phone:
          type: string
          maxLength: 15
        city:
          type: string
          maxLength: 100
        street:
          type: string
          maxLength: 100
        house:
          type: string
          maxLength: 50
        building:
          type: string
          maxLength: 50
        apartment:
          type: string
          maxLength: 50
        user:
          type: integer
      required:
      - city
      - first_name
      - house
      - id
      - last_name
      - phone
      - street
      - user
    CreateOrder:
      type: object
      description: Сериализатор для создания заказа.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          title: Пользователь
        status:
          allOf:
          - $ref: '#/components/schemas/Status032Enum'
          title: Статус
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
      required:
      - id
      - items
      - user
    CustomTokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    Order:
      type: object
      description: Сериализатор для заказа.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          title: Пользователь
        status:
          allOf:
          - $ref: '#/components/schemas/Status032Enum'
          title: Статус
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата создания
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата обновления
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Общая стоимость
          readOnly: true
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          readOnly: true
      required:
      - created_at
      - id
      - items
      - total_price
      - updated_at
      - user
    OrderItem:
      type: object
      description: Сериализатор для элементов заказа.
      properties:
        id:
          type: integer
          readOnly: true
        product:
          type: integer
          title: Товар
        product_name:
          type: string
          title: Название товара
          readOnly: true
        quantity:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Количество
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Цена за единицу
      required:
      - id
      - price
      - product
      - product_name
    PatchedUpdateOrderStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/UpdateOrderStatusStatusEnum'
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: Роль
        phone:
          type: string
          nullable: true
          title: Телефон
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        address:
          type: string
          nullable: true
          title: Адрес
        date_of_birth:
          type: string
          format: date
          nullable: true
          title: Дата рождения
        avatar:
          type: string
          format: uri
          nullable: true
          title: Аватар
        is_verified:
          type: boolean
          title: Пользователь верифицирован
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        attributes:
          type: array
          items:
            $ref: '#/components/schemas/ProductAttribute'
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
          readOnly: true
        suppliers:
          type: array
          items:
            $ref: '#/components/schemas/Supplier'
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/Category'
          readOnly: true
        name:
          type: string
          title: Название товара
          maxLength: 255
        price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          title: Цена
        stock:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Количество на складе
        description:
          type: string
          title: Описание товара
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата добавления
        updated_at:
          type: string
          format: date-time
          readOnly: true
          title: Дата последнего обновления
      required:
      - attributes
      - category
      - created_at
      - id
      - images
      - name
      - price
      - stock
      - suppliers
      - updated_at
    ProductAttribute:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название характеристики
          maxLength: 255
        value:
          type: string
          title: Значение
          maxLength: 255
        product:
          type: integer
          title: Товар
      required:
      - id
      - name
      - product
      - value
    ProductImage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
          title: Изображение
        alt_text:
          type: string
          title: Описание изображения (alt text)
          maxLength: 255
        is_main:
          type: boolean
          title: Главное изображение
        product:
          type: integer
          title: Товар
      required:
      - id
      - image
      - product
    RoleEnum:
      enum:
      - client
      - supplier
      - admin
      type: string
      description: |-
        * `client` - Client
        * `supplier` - Supplier
        * `admin` - Admin
    Status032Enum:
      enum:
      - new
      - processing
      - completed
      - canceled
      type: string
      description: |-
        * `new` - Новый
        * `processing` - В обработке
        * `completed` - Завершён
        * `canceled` - Отменён
    Supplier:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Название поставщика
          maxLength: 255
        email:
          type: string
          format: email
          title: Email поставщика
          maxLength: 254
        phone:
          type: string
          title: Телефон поставщика
          maxLength: 20
        address:
          type: string
          nullable: true
          title: Адрес
        is_active:
          type: boolean
          title: Активен ли поставщик
      required:
      - email
      - id
      - name
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UpdateOrderStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/UpdateOrderStatusStatusEnum'
      required:
      - status
    UpdateOrderStatusStatusEnum:
      enum:
      - pending
      - completed
      - canceled
      type: string
      description: |-
        * `pending` - pending
        * `completed` - completed
        * `canceled` - canceled
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          title: Роль
        phone:
          type: string
          nullable: true
          title: Телефон
          pattern: ^\+?1?\d{9,15}$
          maxLength: 15
        address:
          type: string
          nullable: true
          title: Адрес
        date_of_birth:
          type: string
          format: date
          nullable: true
          title: Дата рождения
        avatar:
          type: string
          format: uri
          nullable: true
          title: Аватар
        is_verified:
          type: boolean
          title: Пользователь верифицирован
      required:
      - email
      - id
      - username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
