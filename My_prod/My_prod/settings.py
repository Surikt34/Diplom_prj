"""
Django settings for My_prod project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
from baton.ai import AIModels
from decouple import config
from pathlib import Path



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = config('SECRET_KEY', default='unsafe-secret-key')
DEBUG = config('DEBUG', default=False, cast=bool)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'baton',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'users',
    'catalog',
    'orders',
    'drf_spectacular',
    'django_filters',
    'rest_framework',
    'social_django',
    'versatileimagefield',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'social_django.middleware.SocialAuthExceptionMiddleware',
]

ROOT_URLCONF = 'My_prod.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'My_prod.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
}

AUTH_USER_MODEL = 'users.CustomUser'

SPECTACULAR_SETTINGS = {
    'TITLE': 'My Project API',
    'DESCRIPTION': 'Документация для моего API',
    'VERSION': '1.0.0',
    'DEBUG': True,
    # не могу разобраться в чем ошибка генерации схемы
    # 'ENUM_NAME_OVERRIDES': {
    #     'users.enums.UserRoleEnum': 'UserRoleEnum',
    #     'orders.enums.OrderStatusEnum': 'OrderStatusEnum',
    # },

}


# Настройки для отправки email через SMTP
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'  # Или другой SMTP-сервер
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')


# Настройки Celery
CELERY_BROKER_URL = 'redis://localhost:6379/0'  # URL Redis
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.redis.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',
    }
}

# для авторизации через соц сети
AUTHENTICATION_BACKENDS = [
    'social_core.backends.google.GoogleOAuth2',  # Google OAuth2
    'django.contrib.auth.backends.ModelBackend',  # Стандартный Django-бэкенд
]
# ключи API для Google:
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = '<your-client-id>'  # Клиентский ID приложения Google
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = '<your-client-secret>'  # Секретный ключ клиента Google

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

# звпрос доп данных (почта и профиль)
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    'https://www.googleapis.com/auth/userinfo.email',
    'https://www.googleapis.com/auth/userinfo.profile',
]


# для сохранения данных от google
SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.user.get_username',
    'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'social_core.pipeline.social_auth.load_extra_data',
)

STATIC_URL = '/static/'

STATIC_ROOT = BASE_DIR / "staticfiles"
BATON_STATIC_DIR = BASE_DIR / 'baton/static'

STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# настройки интерфейса админки
BATON = {
    'SITE_HEADER': 'Управление сайтом',  # Заголовок в шапке админки
    'SITE_TITLE': 'My Admin Panel',  # Заголовок на вкладке
    'site_logo': '/static/logo/my_logo.png',
    'site_logo_classes': 'img-circle',
    'SUPPORT_HREF': 'mail@mail.ru',  # Ссылка на поддержку
    'COPYRIGHT': '© 2025 My Company',  # Текст копирайта
    'POWERED_BY': '<a href="https://github.com/otto-torino/django-baton">Django Baton</a>',
    'POWERED_BY_LINK': 'https://github.com/otto-torino/django-baton',
    'MENU':   (
        {'type': 'title', 'label': 'Управление сайтом'},
    {
        'type': 'app',
        'name': 'auth',
        'label': 'Пользователи',
        'icon': 'fa fa-users',
        'models': [
            {'name': 'user', 'label': 'Пользователи', 'icon': 'fa fa-user'},
            {'name': 'group', 'label': 'Группы', 'icon': 'fa fa-users-cog'},
        ],
    },
    {'type': 'app', 'name': 'orders', 'label': 'Заказы', 'icon': 'fa fa-shopping-cart'},
    {'type': 'app', 'name': 'catalog', 'label': 'Каталог', 'icon': 'fa fa-list-alt'},
    {'type': 'free', 'label': 'Документация', 'url': '/api/docs', 'icon': 'fa fa-file-text'},
    ),
    'ANALYTICS': {
        'CREDENTIALS': {
            'type': 'service_account',
            'project_id': '<project_id>',
            'private_key_id': '<private_key_id>',
            'private_key': '<private_key>',
            'client_email': '<client_email>',
            'client_id': '<client_id>',
            'auth_uri': 'https://accounts.google.com/o/oauth2/auth',
            'token_uri': 'https://accounts.google.com/o/oauth2/token',
            'auth_provider_x509_cert_url': 'https://www.googleapis.com/oauth2/v1/certs',
            'client_x509_cert_url': '<client_x509_cert_url>',
        },
        'VIEW_ID': '<view_id>',
    },
    'CUSTOM_STYLE': 'css/custom_admin.css',
    'ENABLE_THEMES': True,  # Показывать меню выбора темы
    'CONFIRM_UNSAVED_CHANGES': True,    # Показывать предупреждение при несохранённых изменениях
    'ENABLE_IMAGES_PREVIEW': True,  # Показывать предварительное просмотр изображений
    'IMAGE_PREVIEW_WIDTH': 200,  # Ширина предварительного просмотра изображений
    'CHANGELIST_FILTERS_IN_MODAL': True,        # Показывать фильтры в модальном окне
    'MENU_TITLE': 'Навигация',
    'SEARCH_FIELD': {
        'label': 'поиск',
        'url': '/api/path/',
    },


}
MEDIA_ROOT = BASE_DIR / 'media'
MEDIA_URL = '/media/'


LANGUAGE_CODE = 'ru-ru'
TIME_ZONE = 'Europe/Moscow'